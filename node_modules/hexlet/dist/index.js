'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeGame = exports.iterationsCount = undefined;

var _readlineSync = require('readline-sync');

var _readlineSync2 = _interopRequireDefault(_readlineSync);

var _hexletPairs = require('hexlet-pairs');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var iterationsCount = exports.iterationsCount = 3; // set the number of questions

var playGame = function playGame(counter, generateGameData) {
  if (counter === 0) {
    return true;
  }

  var gameData = generateGameData();
  var question = (0, _hexletPairs.car)(gameData);
  var calculatedAnswer = (0, _hexletPairs.cdr)(gameData);
  console.log('Question: ' + question);
  var userAnswer = _readlineSync2.default.question('Your answer: ');

  if (userAnswer === calculatedAnswer) {
    console.log('Correct!');
    return playGame(counter - 1, generateGameData);
  }

  console.log('\'' + userAnswer + '\' is wrong answer ;(. Correct answer was \'' + calculatedAnswer + '\'.');
  return false;
};

var makeGame = exports.makeGame = function makeGame(generateGameData, rule) {
  console.log('\nWelcome to the Brain Games!');

  console.log(rule);

  var userName = _readlineSync2.default.question('\nMay I have your name? ');
  console.log('Hello, ' + userName + '!\n');

  var gameResult = playGame(iterationsCount, generateGameData);

  if (gameResult) {
    console.log('Congratulations, ' + userName + '!');
  } else {
    console.log('Let\'s try again, ' + userName + '!\n');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpdGVyYXRpb25zQ291bnQiLCJwbGF5R2FtZSIsImNvdW50ZXIiLCJnZW5lcmF0ZUdhbWVEYXRhIiwiZ2FtZURhdGEiLCJxdWVzdGlvbiIsImNhbGN1bGF0ZWRBbnN3ZXIiLCJjb25zb2xlIiwibG9nIiwidXNlckFuc3dlciIsIm1ha2VHYW1lIiwicnVsZSIsInVzZXJOYW1lIiwiZ2FtZVJlc3VsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFFTyxJQUFNQSw0Q0FBa0IsQ0FBeEIsQyxDQUEyQjs7QUFFbEMsSUFBTUMsV0FBVyxTQUFYQSxRQUFXLENBQUNDLE9BQUQsRUFBVUMsZ0JBQVYsRUFBK0I7QUFDOUMsTUFBSUQsWUFBWSxDQUFoQixFQUFtQjtBQUNqQixXQUFPLElBQVA7QUFDRDs7QUFFRCxNQUFNRSxXQUFXRCxrQkFBakI7QUFDQSxNQUFNRSxXQUFXLHNCQUFJRCxRQUFKLENBQWpCO0FBQ0EsTUFBTUUsbUJBQW1CLHNCQUFJRixRQUFKLENBQXpCO0FBQ0FHLFVBQVFDLEdBQVIsZ0JBQXlCSCxRQUF6QjtBQUNBLE1BQU1JLGFBQWEsdUJBQWFKLFFBQWIsQ0FBc0IsZUFBdEIsQ0FBbkI7O0FBRUEsTUFBSUksZUFBZUgsZ0JBQW5CLEVBQXFDO0FBQ25DQyxZQUFRQyxHQUFSLENBQVksVUFBWjtBQUNBLFdBQU9QLFNBQVNDLFVBQVUsQ0FBbkIsRUFBc0JDLGdCQUF0QixDQUFQO0FBQ0Q7O0FBRURJLFVBQVFDLEdBQVIsUUFBZ0JDLFVBQWhCLG9EQUF1RUgsZ0JBQXZFO0FBQ0EsU0FBTyxLQUFQO0FBQ0QsQ0FsQkQ7O0FBb0JPLElBQU1JLDhCQUFXLFNBQVhBLFFBQVcsQ0FBQ1AsZ0JBQUQsRUFBbUJRLElBQW5CLEVBQTRCO0FBQ2xESixVQUFRQyxHQUFSLENBQVksK0JBQVo7O0FBRUFELFVBQVFDLEdBQVIsQ0FBWUcsSUFBWjs7QUFFQSxNQUFNQyxXQUFXLHVCQUFhUCxRQUFiLENBQXNCLDBCQUF0QixDQUFqQjtBQUNBRSxVQUFRQyxHQUFSLGFBQXNCSSxRQUF0Qjs7QUFFQSxNQUFNQyxhQUFhWixTQUFTRCxlQUFULEVBQTBCRyxnQkFBMUIsQ0FBbkI7O0FBRUEsTUFBSVUsVUFBSixFQUFnQjtBQUNkTixZQUFRQyxHQUFSLHVCQUFnQ0ksUUFBaEM7QUFDRCxHQUZELE1BRU87QUFDTEwsWUFBUUMsR0FBUix3QkFBZ0NJLFFBQWhDO0FBQ0Q7QUFDRixDQWZNIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlYWRsaW5lU3luYyBmcm9tICdyZWFkbGluZS1zeW5jJztcbmltcG9ydCB7IGNhciwgY2RyIH0gZnJvbSAnaGV4bGV0LXBhaXJzJztcblxuZXhwb3J0IGNvbnN0IGl0ZXJhdGlvbnNDb3VudCA9IDM7IC8vIHNldCB0aGUgbnVtYmVyIG9mIHF1ZXN0aW9uc1xuXG5jb25zdCBwbGF5R2FtZSA9IChjb3VudGVyLCBnZW5lcmF0ZUdhbWVEYXRhKSA9PiB7XG4gIGlmIChjb3VudGVyID09PSAwKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb25zdCBnYW1lRGF0YSA9IGdlbmVyYXRlR2FtZURhdGEoKTtcbiAgY29uc3QgcXVlc3Rpb24gPSBjYXIoZ2FtZURhdGEpO1xuICBjb25zdCBjYWxjdWxhdGVkQW5zd2VyID0gY2RyKGdhbWVEYXRhKTtcbiAgY29uc29sZS5sb2coYFF1ZXN0aW9uOiAke3F1ZXN0aW9ufWApO1xuICBjb25zdCB1c2VyQW5zd2VyID0gcmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdZb3VyIGFuc3dlcjogJyk7XG5cbiAgaWYgKHVzZXJBbnN3ZXIgPT09IGNhbGN1bGF0ZWRBbnN3ZXIpIHtcbiAgICBjb25zb2xlLmxvZygnQ29ycmVjdCEnKTtcbiAgICByZXR1cm4gcGxheUdhbWUoY291bnRlciAtIDEsIGdlbmVyYXRlR2FtZURhdGEpO1xuICB9XG5cbiAgY29uc29sZS5sb2coYCcke3VzZXJBbnN3ZXJ9JyBpcyB3cm9uZyBhbnN3ZXIgOyguIENvcnJlY3QgYW5zd2VyIHdhcyAnJHtjYWxjdWxhdGVkQW5zd2VyfScuYCk7XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCBjb25zdCBtYWtlR2FtZSA9IChnZW5lcmF0ZUdhbWVEYXRhLCBydWxlKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdcXG5XZWxjb21lIHRvIHRoZSBCcmFpbiBHYW1lcyEnKTtcblxuICBjb25zb2xlLmxvZyhydWxlKTtcblxuICBjb25zdCB1c2VyTmFtZSA9IHJlYWRsaW5lU3luYy5xdWVzdGlvbignXFxuTWF5IEkgaGF2ZSB5b3VyIG5hbWU/ICcpO1xuICBjb25zb2xlLmxvZyhgSGVsbG8sICR7dXNlck5hbWV9IVxcbmApO1xuXG4gIGNvbnN0IGdhbWVSZXN1bHQgPSBwbGF5R2FtZShpdGVyYXRpb25zQ291bnQsIGdlbmVyYXRlR2FtZURhdGEpO1xuXG4gIGlmIChnYW1lUmVzdWx0KSB7XG4gICAgY29uc29sZS5sb2coYENvbmdyYXR1bGF0aW9ucywgJHt1c2VyTmFtZX0hYCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coYExldCdzIHRyeSBhZ2FpbiwgJHt1c2VyTmFtZX0hXFxuYCk7XG4gIH1cbn07XG4iXX0=