'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _hexletPairs = require('hexlet-pairs');

var _ = require('..');

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rule = 'What number is missing in this progression?';

var valueRangeMin = 1;
var valueRangeMax = 100;
var progressionLength = 10;

var makeProgression = function makeProgression(first, difference, length, skippedPosition) {
  var iter = function iter(counter, progression, skippedNumber) {
    if (counter > length) {
      return (0, _hexletPairs.cons)(progression, skippedNumber);
    }

    if (counter === skippedPosition) {
      return iter(counter + 1, progression + '.. ', '' + (first + (counter - 1) * difference));
    }

    return iter(counter + 1, progression + (first + (counter - 1) * difference) + ' ', skippedNumber);
  };

  return iter(1, '', 0);
};

var askProgression = function askProgression() {
  var firstElement = (0, _utils2.default)(valueRangeMin, valueRangeMax);
  var step = (0, _utils2.default)(valueRangeMin, valueRangeMax);
  var skippedElement = (0, _utils2.default)(1, progressionLength);
  var game = makeProgression(firstElement, step, progressionLength, skippedElement);
  return game;
};

var startProgressionGame = function startProgressionGame() {
  return (0, _.makeGame)(askProgression, rule);
};

exports.default = startProgressionGame;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nYW1lcy9icmFpbi1wcm9ncmVzc2lvbi5qcyJdLCJuYW1lcyI6WyJydWxlIiwidmFsdWVSYW5nZU1pbiIsInZhbHVlUmFuZ2VNYXgiLCJwcm9ncmVzc2lvbkxlbmd0aCIsIm1ha2VQcm9ncmVzc2lvbiIsImZpcnN0IiwiZGlmZmVyZW5jZSIsImxlbmd0aCIsInNraXBwZWRQb3NpdGlvbiIsIml0ZXIiLCJjb3VudGVyIiwicHJvZ3Jlc3Npb24iLCJza2lwcGVkTnVtYmVyIiwiYXNrUHJvZ3Jlc3Npb24iLCJmaXJzdEVsZW1lbnQiLCJzdGVwIiwic2tpcHBlZEVsZW1lbnQiLCJnYW1lIiwic3RhcnRQcm9ncmVzc2lvbkdhbWUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxPQUFPLDZDQUFiOztBQUVBLElBQU1DLGdCQUFnQixDQUF0QjtBQUNBLElBQU1DLGdCQUFnQixHQUF0QjtBQUNBLElBQU1DLG9CQUFvQixFQUExQjs7QUFFQSxJQUFNQyxrQkFBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEtBQUQsRUFBUUMsVUFBUixFQUFvQkMsTUFBcEIsRUFBNEJDLGVBQTVCLEVBQWdEO0FBQ3RFLE1BQU1DLE9BQU8sU0FBUEEsSUFBTyxDQUFDQyxPQUFELEVBQVVDLFdBQVYsRUFBdUJDLGFBQXZCLEVBQXlDO0FBQ3BELFFBQUlGLFVBQVVILE1BQWQsRUFBc0I7QUFDcEIsYUFBTyx1QkFBS0ksV0FBTCxFQUFrQkMsYUFBbEIsQ0FBUDtBQUNEOztBQUVELFFBQUlGLFlBQVlGLGVBQWhCLEVBQWlDO0FBQy9CLGFBQU9DLEtBQUtDLFVBQVUsQ0FBZixFQUFxQkMsV0FBckIsZ0JBQTBDTixRQUFTLENBQUNLLFVBQVUsQ0FBWCxJQUFnQkosVUFBbkUsRUFBUDtBQUNEOztBQUVELFdBQU9HLEtBQUtDLFVBQVUsQ0FBZixFQUFxQkMsZUFBZU4sUUFBUyxDQUFDSyxVQUFVLENBQVgsSUFBZ0JKLFVBQXhDLENBQXJCLFFBQThFTSxhQUE5RSxDQUFQO0FBQ0QsR0FWRDs7QUFZQSxTQUFPSCxLQUFLLENBQUwsRUFBUSxFQUFSLEVBQVksQ0FBWixDQUFQO0FBQ0QsQ0FkRDs7QUFnQkEsSUFBTUksaUJBQWlCLFNBQWpCQSxjQUFpQixHQUFNO0FBQzNCLE1BQU1DLGVBQWUscUJBQWViLGFBQWYsRUFBOEJDLGFBQTlCLENBQXJCO0FBQ0EsTUFBTWEsT0FBTyxxQkFBZWQsYUFBZixFQUE4QkMsYUFBOUIsQ0FBYjtBQUNBLE1BQU1jLGlCQUFpQixxQkFBZSxDQUFmLEVBQWtCYixpQkFBbEIsQ0FBdkI7QUFDQSxNQUFNYyxPQUFPYixnQkFBZ0JVLFlBQWhCLEVBQThCQyxJQUE5QixFQUFvQ1osaUJBQXBDLEVBQXVEYSxjQUF2RCxDQUFiO0FBQ0EsU0FBT0MsSUFBUDtBQUNELENBTkQ7O0FBUUEsSUFBTUMsdUJBQXVCLFNBQXZCQSxvQkFBdUI7QUFBQSxTQUFNLGdCQUFTTCxjQUFULEVBQXlCYixJQUF6QixDQUFOO0FBQUEsQ0FBN0I7O2tCQUVla0Isb0IiLCJmaWxlIjoiYnJhaW4tcHJvZ3Jlc3Npb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zIH0gZnJvbSAnaGV4bGV0LXBhaXJzJztcbmltcG9ydCB7IG1ha2VHYW1lIH0gZnJvbSAnLi4nO1xuaW1wb3J0IGdlbmVyYXRlTnVtYmVyIGZyb20gJy4uL3V0aWxzJztcblxuY29uc3QgcnVsZSA9ICdXaGF0IG51bWJlciBpcyBtaXNzaW5nIGluIHRoaXMgcHJvZ3Jlc3Npb24/JztcblxuY29uc3QgdmFsdWVSYW5nZU1pbiA9IDE7XG5jb25zdCB2YWx1ZVJhbmdlTWF4ID0gMTAwO1xuY29uc3QgcHJvZ3Jlc3Npb25MZW5ndGggPSAxMDtcblxuY29uc3QgbWFrZVByb2dyZXNzaW9uID0gKGZpcnN0LCBkaWZmZXJlbmNlLCBsZW5ndGgsIHNraXBwZWRQb3NpdGlvbikgPT4ge1xuICBjb25zdCBpdGVyID0gKGNvdW50ZXIsIHByb2dyZXNzaW9uLCBza2lwcGVkTnVtYmVyKSA9PiB7XG4gICAgaWYgKGNvdW50ZXIgPiBsZW5ndGgpIHtcbiAgICAgIHJldHVybiBjb25zKHByb2dyZXNzaW9uLCBza2lwcGVkTnVtYmVyKTtcbiAgICB9XG5cbiAgICBpZiAoY291bnRlciA9PT0gc2tpcHBlZFBvc2l0aW9uKSB7XG4gICAgICByZXR1cm4gaXRlcihjb3VudGVyICsgMSwgYCR7cHJvZ3Jlc3Npb259Li4gYCwgYCR7Zmlyc3QgKyAoKGNvdW50ZXIgLSAxKSAqIGRpZmZlcmVuY2UpfWApO1xuICAgIH1cblxuICAgIHJldHVybiBpdGVyKGNvdW50ZXIgKyAxLCBgJHtwcm9ncmVzc2lvbiArIChmaXJzdCArICgoY291bnRlciAtIDEpICogZGlmZmVyZW5jZSkpfSBgLCBza2lwcGVkTnVtYmVyKTtcbiAgfTtcblxuICByZXR1cm4gaXRlcigxLCAnJywgMCk7XG59O1xuXG5jb25zdCBhc2tQcm9ncmVzc2lvbiA9ICgpID0+IHtcbiAgY29uc3QgZmlyc3RFbGVtZW50ID0gZ2VuZXJhdGVOdW1iZXIodmFsdWVSYW5nZU1pbiwgdmFsdWVSYW5nZU1heCk7XG4gIGNvbnN0IHN0ZXAgPSBnZW5lcmF0ZU51bWJlcih2YWx1ZVJhbmdlTWluLCB2YWx1ZVJhbmdlTWF4KTtcbiAgY29uc3Qgc2tpcHBlZEVsZW1lbnQgPSBnZW5lcmF0ZU51bWJlcigxLCBwcm9ncmVzc2lvbkxlbmd0aCk7XG4gIGNvbnN0IGdhbWUgPSBtYWtlUHJvZ3Jlc3Npb24oZmlyc3RFbGVtZW50LCBzdGVwLCBwcm9ncmVzc2lvbkxlbmd0aCwgc2tpcHBlZEVsZW1lbnQpO1xuICByZXR1cm4gZ2FtZTtcbn07XG5cbmNvbnN0IHN0YXJ0UHJvZ3Jlc3Npb25HYW1lID0gKCkgPT4gbWFrZUdhbWUoYXNrUHJvZ3Jlc3Npb24sIHJ1bGUpO1xuXG5leHBvcnQgZGVmYXVsdCBzdGFydFByb2dyZXNzaW9uR2FtZTtcbiJdfQ==